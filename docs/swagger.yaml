definitions:
  user.CreateUserValidator:
    properties:
      confirmation_password:
        type: string
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
    required:
    - confirmation_password
    - email
    - full_name
    - password
    type: object
  user.LoginValidator:
    properties:
      email:
        example: email@email.com
        type: string
      password:
        example: P@SSword1234
        type: string
    required:
    - email
    - password
    type: object
  user.RegisterValidator:
    properties:
      confirmation_password:
        type: string
      email:
        type: string
      full_name:
        type: string
      merchant_address:
        type: string
      merchant_name:
        type: string
      merchant_phone:
        type: string
      password:
        type: string
    required:
    - confirmation_password
    - email
    - full_name
    - merchant_address
    - merchant_name
    - merchant_phone
    - password
    type: object
  user.UpdateUserValidator:
    properties:
      email:
        type: string
      full_name:
        type: string
      new_password:
        type: string
      old_password:
        type: string
    required:
    - email
    - full_name
    - new_password
    - old_password
    type: object
  utils.ResponseModel:
    properties:
      code:
        type: integer
      error:
        type: string
      message:
        type: string
      success:
        type: boolean
    type: object
info:
  contact:
    email: fahrul.fauz@gmail.com
    name: API Support
  termsOfService: http://swagger.io/terms/
paths:
  /ping:
    get:
      consumes:
      - application/json
      description: ping app
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponseModel'
      summary: Pinging App
      tags:
      - Default
  /product:
    get:
      consumes:
      - application/json
      description: List product
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Page
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponseModel'
      security:
      - JWTAuth: []
      summary: Get List Product
      tags:
      - Products
    post:
      consumes:
      - application/form-data
      description: Create product
      parameters:
      - description: Product Name
        in: formData
        name: product_name
        required: true
        type: string
      - description: Product Image
        in: formData
        name: product_image
        required: true
        type: file
      - description: Product Price
        in: formData
        name: product_price
        required: true
        type: integer
      - description: Product Actual Price
        in: formData
        name: product_actual_price
        required: true
        type: integer
      - description: Product Stock
        in: formData
        name: product_stock
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponseModel'
      security:
      - JWTAuth: []
      summary: Create Product
      tags:
      - Products
  /product/{uuid}:
    delete:
      consumes:
      - application/json
      description: Delete product
      parameters:
      - description: Product UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponseModel'
      security:
      - JWTAuth: []
      summary: Get Delete Product
      tags:
      - Products
    get:
      consumes:
      - application/json
      description: Detail product
      parameters:
      - description: Product UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponseModel'
      security:
      - JWTAuth: []
      summary: Get Detail Product
      tags:
      - Products
    patch:
      consumes:
      - application/json
      description: Update product
      parameters:
      - description: Product UUID
        in: path
        name: uuid
        required: true
        type: string
      - description: Product Name
        in: formData
        name: product_name
        type: string
      - description: Product Image
        in: formData
        name: product_image
        type: file
      - description: Product Price
        in: formData
        name: product_price
        type: integer
      - description: Product Actual Price
        in: formData
        name: product_actual_price
        type: integer
      - description: Product Stock
        in: formData
        name: product_stock
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponseModel'
      security:
      - JWTAuth: []
      summary: Update Product
      tags:
      - Products
  /user:
    get:
      consumes:
      - application/json
      description: List user
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Page
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponseModel'
      security:
      - JWTAuth: []
      summary: Get List User
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Create user
      parameters:
      - description: Create User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.CreateUserValidator'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponseModel'
      security:
      - JWTAuth: []
      summary: Create User
      tags:
      - Users
  /user/{uuid}:
    delete:
      consumes:
      - application/json
      description: Delete user
      parameters:
      - description: User UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponseModel'
      security:
      - JWTAuth: []
      summary: Get Delete User
      tags:
      - Users
    get:
      consumes:
      - application/json
      description: Detail user
      parameters:
      - description: User UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponseModel'
      security:
      - JWTAuth: []
      summary: Get Detail User
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Update user
      parameters:
      - description: User UUID
        in: path
        name: uuid
        required: true
        type: string
      - description: Update User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.UpdateUserValidator'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponseModel'
      security:
      - JWTAuth: []
      summary: Update User
      tags:
      - Users
  /user/login:
    post:
      consumes:
      - application/json
      description: login app
      parameters:
      - description: Login User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.LoginValidator'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponseModel'
      summary: Login User
      tags:
      - Auth
  /user/register:
    post:
      consumes:
      - application/json
      description: register app
      parameters:
      - description: Register User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.RegisterValidator'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.ResponseModel'
      summary: Register User
      tags:
      - Auth
securityDefinitions:
  JWTAuth:
    in: header
    name: access_token
    type: apiKey
swagger: "2.0"
